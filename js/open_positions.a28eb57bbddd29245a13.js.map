{"version":3,"sources":["webpack:///./Modules/Reports/Containers/open-positions.jsx"],"names":["OpenPositions","getRowAction","row_obj","is_unsupported","component","i18n_default_text","values","website_name","components","key","className","rel","target","href","urlFor","undefined","getContractPath","id","React","Component","this","props","onMount","onUnmount","active_positions","component_icon","is_loading","error","is_empty","currency","totals","Fragment","i18n_heading","localize","i18n_message","length","empty_message_component","EmptyTradeHistoryMessage","localized_message","columns","getOpenPositionsColumnsTemplate","footer","data_source","propTypes","MobxPropTypes","arrayOrObservableArray","PropTypes","string","history","object","bool","is_mobile","is_tablet","func","connect","modules","client","portfolio","is_active_empty","active_positions_totals","withRouter"],"mappings":"4iCAgBMA,E,yQASFC,aAAe,SAACC,GAAD,OACXA,EAAQC,eACJ,CACIC,UACI,kBAAC,IAAD,CACIC,kBAAkB,8GAClBC,OAAQ,CACJC,6BAEJC,WAAY,CACR,uBAAGC,IAAK,EAAGC,UAAU,oBAAoBC,IAAI,sBAAsBC,OAAO,SAASC,KAAMC,iBAAO,wBAAoBC,OAAWA,GAAW,SAKxJC,YAAgBd,EAAQe,K,wPAxBVC,IAAMC,W,kDAE1BC,KAAKC,MAAMC,Y,6CAIXF,KAAKC,MAAME,c,+BAqBN,MASDH,KAAKC,MAPLG,EAFC,EAEDA,iBACAC,EAHC,EAGDA,eACAC,EAJC,EAIDA,WACAC,EALC,EAKDA,MACAC,EANC,EAMDA,SACAC,EAPC,EAODA,SACAC,EARC,EAQDA,OAGJ,OAAIH,EACO,2BAAIA,GAIX,kBAAC,IAAMI,SAAP,KACI,kBAAC,IAAD,CACIC,aAAcC,mBAAS,kBACvBC,aAAcD,mBAAS,qFAEzBP,GAA0C,IAA5BF,EAAiBW,QAAiBP,EAC9C,kBAAC,IAAD,CACIF,WAAYA,IAAeF,EAC3BI,SAAUA,EACVQ,wBAAyBC,IACzBZ,eAAgBA,EAChBa,kBAAmBL,mBAAS,qCAGhCJ,GAAYL,EAAiBW,OAAS,GACtC,kBAAC,IAAD,CACIzB,UAAU,iBACV6B,QAASC,YAAgCX,GACzCY,OAAQX,EACRY,YAAalB,EACbvB,aAAcmB,KAAKnB,cAEnB,kBAAC,IAAD,CACIyB,WAAYA,W,gCAUxC1B,EAAc2C,UAAY,CACtBnB,iBAAkBoB,YAAcC,uBAChCpB,eAAkBqB,IAAUC,OAC5BlB,SAAkBiB,IAAUC,OAC5BpB,MAAkBmB,IAAUC,OAC5BC,QAAkBF,IAAUG,OAC5BrB,SAAkBkB,IAAUI,KAC5BxB,WAAkBoB,IAAUI,KAC5BC,UAAkBL,IAAUI,KAC5BE,UAAkBN,IAAUI,KAC5B5B,QAAkBwB,IAAUO,KAC5B9B,UAAkBuB,IAAUO,KAC5BvB,OAAkBgB,IAAUG,QAGjBK,sBACX,gBAAGC,EAAH,EAAGA,QAAH,MAA0B,CACtB1B,SADJ,EAAY2B,OACiB3B,SACzBL,iBAAkB+B,EAAQE,UAAUjC,iBACpCG,MAAkB4B,EAAQE,UAAU9B,MACpCC,SAAkB2B,EAAQE,UAAUC,gBACpChC,WAAkB6B,EAAQE,UAAU/B,WACpCJ,QAAkBiC,EAAQE,UAAUnC,QACpCC,UAAkBgC,EAAQE,UAAUlC,UACpCO,OAAkByB,EAAQE,UAAUE,0BAT7BL,CAWbM,YAAW5D","file":"js/open_positions.a28eb57bbddd29245a13.js","sourcesContent":["import { PropTypes as MobxPropTypes }      from 'mobx-react';\nimport PropTypes                           from 'prop-types';\nimport React                               from 'react';\nimport { withRouter }                      from 'react-router-dom';\nimport { localize }                        from 'App/i18n';\nimport { urlFor }                          from '_common/url';\nimport DataTable                           from 'App/Components/Elements/DataTable';\nimport Localize                            from 'App/Components/Elements/localize.jsx';\nimport { website_name }                    from 'App/Constants/app-config';\nimport { getContractPath }                 from 'App/Components/Routes/helpers';\nimport EmptyTradeHistoryMessage            from 'Modules/Reports/Components/empty-trade-history-message.jsx';\nimport { ReportsMeta }                     from 'Modules/Reports/Components/reports-meta.jsx';\nimport { getOpenPositionsColumnsTemplate } from 'Modules/Reports/Constants/data-table-constants';\nimport PlaceholderComponent                from 'Modules/Reports/Components/placeholder-component.jsx';\nimport { connect }                         from 'Stores/connect';\n\nclass OpenPositions extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    getRowAction = (row_obj) => (\n        row_obj.is_unsupported ?\n            {\n                component: (\n                    <Localize\n                        i18n_default_text='This trade type is currently not supported on {{website_name}}. Please go to <0>Binary.com</0> for details.'\n                        values={{\n                            website_name,\n                        }}\n                        components={[\n                            <a key={0} className='link link--orange' rel='noopener noreferrer' target='_blank' href={urlFor('user/portfoliows', undefined, undefined, true)} />,\n                        ]}\n                    />\n                ),\n            }\n            : getContractPath(row_obj.id)\n    );\n\n    render() {\n        const {\n            active_positions,\n            component_icon,\n            is_loading,\n            error,\n            is_empty,\n            currency,\n            totals,\n        } = this.props;\n\n        if (error) {\n            return <p>{error}</p>;\n        }\n\n        return (\n            <React.Fragment>\n                <ReportsMeta\n                    i18n_heading={localize('Open positions')}\n                    i18n_message={localize('View all active trades on your account that can still incur a profit or a loss.')}\n                />\n                {(is_loading && active_positions.length === 0) || is_empty ?\n                    <PlaceholderComponent\n                        is_loading={is_loading || !active_positions}\n                        is_empty={is_empty}\n                        empty_message_component={EmptyTradeHistoryMessage}\n                        component_icon={component_icon}\n                        localized_message={localize('You have no open positions yet.')}\n                    />\n                    :\n                    currency && active_positions.length > 0 &&\n                    <DataTable\n                        className='open-positions'\n                        columns={getOpenPositionsColumnsTemplate(currency)}\n                        footer={totals}\n                        data_source={active_positions}\n                        getRowAction={this.getRowAction}\n                    >\n                        <PlaceholderComponent\n                            is_loading={is_loading}\n                        />\n                    </DataTable>\n                }\n            </React.Fragment>\n\n        );\n    }\n}\n\nOpenPositions.propTypes = {\n    active_positions: MobxPropTypes.arrayOrObservableArray,\n    component_icon  : PropTypes.string,\n    currency        : PropTypes.string,\n    error           : PropTypes.string,\n    history         : PropTypes.object,\n    is_empty        : PropTypes.bool,\n    is_loading      : PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_tablet       : PropTypes.bool,\n    onMount         : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    totals          : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, client }) => ({\n        currency        : client.currency,\n        active_positions: modules.portfolio.active_positions,\n        error           : modules.portfolio.error,\n        is_empty        : modules.portfolio.is_active_empty,\n        is_loading      : modules.portfolio.is_loading,\n        onMount         : modules.portfolio.onMount,\n        onUnmount       : modules.portfolio.onUnmount,\n        totals          : modules.portfolio.active_positions_totals,\n    })\n)(withRouter(OpenPositions));\n"],"sourceRoot":""}