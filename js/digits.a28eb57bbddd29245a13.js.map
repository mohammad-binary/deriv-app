{"version":3,"sources":["webpack:///./App/Components/Animations/bounce.jsx","webpack:///./App/Components/Animations/fade-wrapper.jsx","webpack:///./App/Components/Animations/slide-in.jsx","webpack:///./App/Components/Animations/index.js","webpack:///./Modules/Contract/Components/LastDigitPrediction/digit.jsx","webpack:///./Modules/Contract/Components/LastDigitPrediction/digit-spot.jsx","webpack:///./Modules/Contract/Components/LastDigitPrediction/digit-display.jsx","webpack:///./Modules/Contract/Components/LastDigitPrediction/last-digit-particles.jsx","webpack:///./Modules/Contract/Components/LastDigitPrediction/last-digit-pointer.jsx","webpack:///./Modules/Contract/Components/LastDigitPrediction/last-digit-prediction.jsx","webpack:///./Modules/Contract/Components/Digits/digits.jsx"],"names":["BounceUp","posed","div","enter","y","opacity","transition","type","stiffness","damping","default","duration","exit","Bounce","children","className","is_visible","keyname","key","propTypes","PropTypes","node","bool","string","FadeInFromTopDiv","delay","FadeInFromBottomDiv","FadeInOnlyDiv","FadeWrapper","SlideInFromTop","SlideInFromBottom","SlideIn","flipMove","Digit","is_latest","is_lost","is_selected","is_trade_page","is_won","value","classNames","number","DigitSpot","current_spot","Fragment","slice","DigitDisplay","barrier","latest_digit","digit","spot","object","observer","LastDigitParticles","position","style","marginLeft","LastDigitPointer","icon","classNamePath","display_array","Array","from","keys","LastDigitPrediction","state","getBarrier","num","props","contract_type","DIGITMATCH","val","DIGITDIFF","DIGITOVER","DIGITUNDER","DIGITODD","DIGITEVEN","React","Component","this","querySelectorAll","forEach","el","idx","setState","offsetLeft","digits_info","is_ended","status","Object","sort","map","spot_time","ref","Digits","mounted","PureComponent","contract_info","display_status","is_digit_contract"],"mappings":"8IAKMA,EAAWC,IAAMC,IAAI,CACvBC,MAAO,CACHC,EAAY,EACZC,QAAY,EACZC,WAAY,CACRF,EAAG,CACCG,KAAW,SACXC,UAAW,IACXC,QAAW,IAEfC,QAAS,CACLC,SAAU,OAItBC,KAAM,CACFR,EAAY,GACZC,QAAY,EACZC,WAAY,CACRK,SAAU,MAKhBE,EAAS,SAAC,GAAD,IACXC,EADW,EACXA,SACAC,EAFW,EAEXA,UACAC,EAHW,EAGXA,WACAC,EAJW,EAIXA,QAJW,OAMX,kBAAC,IAAD,KACKD,GACG,kBAAChB,EAAD,CAAUe,UAAWA,EAAWG,IAAKD,GAChCH,KAMjBD,EAAOM,UAAY,CACfL,SAAYM,IAAUC,KACtBL,WAAYI,IAAUE,KACtBL,QAAYG,IAAUG,QC1C1B,IAAMC,EAAmBvB,IAAMC,IAAI,CAC/BC,MAAO,CACHC,EAAY,EACZC,QAAY,EACZoB,MAAY,IACZnB,WAAY,CACRI,QAAS,CAAEC,SAAU,OAG7BC,KAAM,CACFR,GAAa,GACbC,QAAY,EACZC,WAAY,CAAEK,SAAU,QAI1Be,EAAsBzB,IAAMC,IAAI,CAClCC,MAAO,CACHC,EAAY,EACZC,QAAY,EACZoB,MAAY,IACZnB,WAAY,CACRI,QAAS,CAAEC,SAAU,OAG7BC,KAAM,CACFR,EAAY,GACZC,QAAY,EACZC,WAAY,CAAEK,SAAU,QAI1BgB,EAAgB1B,IAAMC,IAAI,CAC5BC,MAAO,CAEHE,QAAY,EACZC,WAAY,CAAEK,SAAU,MAE5BC,KAAM,CACFP,QAAY,EACZC,WAAY,CAAEK,SAAU,QAI1BiB,EAAc,SAAC,GAMf,IALFd,EAKE,EALFA,SACAC,EAIE,EAJFA,UACAC,EAGE,EAHFA,WACAC,EAEE,EAFFA,QACAV,EACE,EADFA,KAEA,MAAa,QAATA,EAEI,kBAAC,IAAD,KACKS,GACG,kBAACQ,EAAD,CAAkBT,UAAWA,EAAWG,IAAKD,GACxCH,IAMR,WAATP,EAEI,kBAAC,IAAD,KACKS,GACG,kBAACU,EAAD,CAAqBX,UAAWA,EAAWG,IAAKD,GAC3CH,IAOjB,kBAAC,IAAD,KACKE,GACG,kBAACW,EAAD,CAAeZ,UAAWA,EAAWG,IAAKD,GACrCH,KAOrBc,EAAYT,UAAY,CACpBL,SAAYM,IAAUC,KACtBL,WAAYI,IAAUE,KACtBL,QAAYG,IAAUG,OACtBhB,KAAYa,IAAUG,QCxF1B,IAAMM,EAAiB5B,IAAMC,IAAI,CAC7BC,MAAO,CACHC,EAAY,EACZC,QAAY,EACZC,WAAY,CACRK,SAAU,MAGlBC,KAAM,CACFR,GAAa,GACbC,QAAY,EACZC,WAAY,CACRK,SAAU,QAKhBmB,EAAoB7B,IAAMC,IAAI,CAChCC,MAAO,CACHC,EAAY,EACZC,QAAY,EACZC,WAAY,CACRK,SAAU,MAGlBC,KAAM,CACFR,EAAY,GACZC,QAAY,EACZC,WAAY,CACRK,SAAU,QAKhBoB,EAAU,SAAC,GAMX,IALFjB,EAKE,EALFA,SACAC,EAIE,EAJFA,UACAE,EAGE,EAHFA,QACAD,EAEE,EAFFA,WAGA,MAAa,WADX,EADFT,KAIQ,kBAAC,IAAD,CAAWyB,UAAU,GAChBhB,GACG,kBAACc,EAAD,CAAmBf,UAAWA,EAAWG,IAAKD,GACzCH,IAOjB,kBAAC,IAAD,CAAWkB,UAAU,GAChBhB,GACG,kBAACa,EAAD,CAAgBd,UAAWA,EAAWG,IAAKD,GACtCH,KAOrBiB,EAAQZ,UAAY,CAChBL,SAAYM,IAAUC,KACtBL,WAAYI,IAAUE,KACtBL,QAAYG,IAAUG,OACtBhB,KAAYa,IAAUG,QCxE1B,iG,mICIMU,EAAQ,SAAC,GAAD,IACVC,EADU,EACVA,UACAC,EAFU,EAEVA,QACAC,EAHU,EAGVA,YACAC,EAJU,EAIVA,cACAC,EALU,EAKVA,OACAC,EANU,EAMVA,MANU,OAQV,0BACIxB,UAAWyB,IAAW,sBAAuB,CACzC,8BAAiCN,EACjC,gCAAiCE,EACjC,6BAAiCE,GAAUJ,GAAaG,EACxD,2BAAiCC,GAAUJ,EAC3C,4BAAiCC,GAAWD,KAG/CK,IAITN,EAAMd,UAAY,CACde,UAAed,IAAUE,KACzBa,QAAef,IAAUE,KACzBc,YAAehB,IAAUE,KACzBe,cAAejB,IAAUE,KACzBgB,OAAelB,IAAUE,KACzBiB,MAAenB,IAAUqB,QAGdR,QC9BTS,EAAY,SAAC,GAAD,IACdC,EADc,EACdA,aACAR,EAFc,EAEdA,QACAG,EAHc,EAGdA,OAHc,OAKd,kBAAC,IAAMM,SAAP,KACI,0BAAM7B,UAAU,4BACX4B,EAAaE,MAAM,GAAI,IAE5B,0BACI9B,UAAWyB,IAAW,0BAA2B,CAC7C,+BAAiCF,EACjC,gCAAiCH,KAGpCQ,EAAaE,OAAO,MAKjCH,EAAUvB,UAAY,CAClBwB,aAAcvB,IAAUG,OACxBY,QAAcf,IAAUE,KACxBgB,OAAclB,IAAUE,MAGboB,QCtBTI,EAAe,SAAC,GAOhB,IANFC,EAME,EANFA,QACAZ,EAKE,EALFA,QACAE,EAIE,EAJFA,cACAC,EAGE,EAHFA,OACAU,EAEE,EAFFA,aACAT,EACE,EADFA,MAEQU,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KACThB,EAAkBK,IAAUU,EAC5Bb,EAAkBG,IAAUQ,EAElC,OACI,yBACIhC,UAAWyB,IAAW,gBAAiB,CACnC,qBAAuBF,GAAUJ,EACjC,sBAAuBC,GAAWD,KAGtC,kBAAC,IAAD,CACIlB,cAAekB,IAAagB,GAC5BnC,UAAU,qBACVE,QAAQ,sBAER,kBAAC,EAAD,CACI0B,aAAcO,EACdf,QAASA,EACTnB,cAAekB,IAAagB,GAC5BZ,OAAQA,KAGhB,kBAAC,EAAD,CACIJ,UAAWA,EACXC,QAASA,EACTE,cAAeA,EACfD,YAAaA,EACbE,OAAQA,EACRC,MAAOA,MAMvBO,EAAa3B,UAAY,CACrB4B,QAAe3B,IAAUqB,OACzBN,QAAef,IAAUE,KACzBe,cAAejB,IAAUE,KACzBgB,OAAelB,IAAUE,KACzB0B,aAAe5B,IAAU+B,OACzBZ,MAAenB,IAAUqB,QAGdW,yBAASN,GCxDlBO,EAAqB,SAAC,GAAD,IACvBf,EADuB,EACvBA,OACAgB,EAFuB,EAEvBA,SAFuB,OAIvB,yBACIvC,UAAWyB,IAAW,oBAAqB,CACvC,6BAA8BF,IAElCiB,MAAO,CAAEC,WAAYF,IAErB,0BAAMvC,UAAU,+BAChB,0BAAMA,UAAU,+BAChB,0BAAMA,UAAU,+BAChB,0BAAMA,UAAU,+BAChB,0BAAMA,UAAU,+BAChB,0BAAMA,UAAU,+BAChB,0BAAMA,UAAU,+BAChB,0BAAMA,UAAU,iCAIxBsC,EAAmBlC,UAAY,CAC3BmB,OAAUlB,IAAUE,KACpBgC,SAAUlC,IAAUqB,QAGTY,Q,OCzBTI,EAAmB,SAAC,GAAD,IACrBtB,EADqB,EACrBA,QACAG,EAFqB,EAErBA,OACAgB,EAHqB,EAGrBA,SAHqB,OAKrB,0BACIvC,UAAU,kBACVwC,MAAO,CAAEC,WAAYF,IAErB,kBAAC,IAAD,CACII,KAAK,gBACL3C,UAAWyB,IAAW,eAAgB,CAClC,oBAAsBF,EACtB,qBAAsBH,IAE1BwB,cAAc,qBACdpD,KAAK,aAKjBkD,EAAiBtC,UAAY,CACzBgB,QAAUf,IAAUE,KACpBgB,OAAUlB,IAAUE,KACpBgC,SAAUlC,IAAUqB,QAGTgB,Q,uyBCzBf,IAAMG,EAAgBC,MAAMC,KAAKD,MAAM,IAAIE,QACrCC,E,yQACFC,MAAQ,G,EAWRC,WAAa,SAACC,GAAQ,MACkB,EAAKC,MAAhCrB,EADS,EACTA,QAASsB,EADA,EACAA,cAUlB,OAAKA,GARe,CAChBC,WAAY,SAACC,GAAD,OAASA,IAAQxB,GAC7ByB,UAAY,SAACD,GAAD,OAASA,IAAQxB,GAC7B0B,UAAY,SAACF,GAAD,OAASA,EAAMxB,GAC3B2B,WAAY,SAACH,GAAD,OAASA,EAAMxB,GAC3B4B,SAAY,SAACJ,GAAD,OAASA,EAAM,GAC3BK,UAAY,SAACL,GAAD,QAAWA,EAAM,KAGdF,GAAeF,GAAOA,EADd,M,wPAvBDU,IAAMC,W,kDAGhB,WAChBC,KAAK1D,KAAK2D,iBAAiB,kBAAkBC,QAAQ,SAACC,EAAIC,G,UAEtD,EAAKC,U,EAAL,G,EACKD,E,EAAMD,EAAGG,W,oIAoBb,aACoDN,KAAKX,MAAtDkB,EADH,EACGA,YAAaC,EADhB,EACgBA,SAAUlD,EAD1B,EAC0BA,cAAemD,EADzC,EACyCA,OAExCxC,EADeyC,OAAO1B,KAAKuB,GAAaI,OAAOC,IAAI,SAAAC,GAAS,OAAIN,EAAYM,KAChD/C,OAAO,GAAG,IAAM,GAG5CP,EAAUiD,GAAuB,QAAXC,EAItBrD,EAAUoD,GAAuB,SAAXC,EAEtBlC,EAAWyB,KAAKd,MAAMjB,EAAaC,OAEzC,OACI,yBACI4C,IAAK,SAAAxE,GAAI,OAAI,EAAKA,KAAOA,GACzBN,UAAU,UAER6C,EAAc+B,IAAI,SAACR,GAAD,OAChB,kBAAC,EAAD,CACIpC,QAAS,EAAKmB,WAAWiB,GACzBhD,QAASA,EACTE,cAAeA,EACfC,OAAQA,EACRpB,IAAKiE,EACLnC,aAAcA,EACdT,MAAO4C,MAGbnC,EAAaC,OAAS,GACpB,kBAAC,EAAD,CACId,QAASA,EACTG,OAAQA,EACRgB,SAAUA,IAGlB,kBAAC,EAAD,CACIhB,OAAQA,EACRgB,SAAUA,U,gCAO9BU,EAAoB7C,UAAY,CAC5B4B,QAAe3B,IAAUqB,OACzB4B,cAAejD,IAAUG,OACzB+D,YAAelE,IAAU+B,OACzBoC,SAAenE,IAAUE,KACzBkE,OAAepE,IAAUG,QAGd6B,yBAASY,G,kzBCnFlB8B,E,yQACF7B,MAAQ,CACJ8B,SAAS,G,wPAFIlB,IAAMmB,e,kDAMnBjB,KAAKK,SAAS,CAAEW,SAAS,M,+BAGpB,MAQDhB,KAAKX,MANL6B,EAFC,EAEDA,cACAX,EAHC,EAGDA,YACAY,EAJC,EAIDA,eACAC,EALC,EAKDA,kBACAZ,EANC,EAMDA,SACAlD,EAPC,EAODA,cAGJ,OACI,kBAAC,IAAD,CACIrB,WAAYmF,GAAqBpB,KAAKd,MAAM8B,QAC5ChF,UAAU,SACVE,QAAQ,SACRV,KAAK,UAEL,kBAAC,EAAD,CACIwC,SAAUkD,EAAclD,QACxBsB,cAAe4B,EAAc5B,cAC7BiB,YAAaA,EACbC,SAAUA,EACVlD,cAAeA,EACfmD,OAAQU,U,gCAO5BJ,EAAO3E,UAAY,CACf8E,cAAmB7E,IAAU+B,OAC7BmC,YAAmBlE,IAAU+B,OAC7B+C,eAAmB9E,IAAUG,OAC7B4E,kBAAmB/E,IAAUE,KAC7BiE,SAAmBnE,IAAUE,KAC7Be,cAAmBjB,IAAUE,MAGlBwE,Q","file":"js/digits.a28eb57bbddd29245a13.js","sourcesContent":["import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport posed,\n{ PoseGroup }         from 'react-pose';\n\nconst BounceUp = posed.div({\n    enter: {\n        y         : 0,\n        opacity   : 1,\n        transition: {\n            y: {\n                type     : 'spring',\n                stiffness: 500,\n                damping  : 15,\n            },\n            default: {\n                duration: 300,\n            },\n        },\n    },\n    exit: {\n        y         : 35,\n        opacity   : 0,\n        transition: {\n            duration: 0,\n        },\n    },\n});\n\nconst Bounce = ({\n    children,\n    className,\n    is_visible,\n    keyname,\n}) => (\n    <PoseGroup>\n        {is_visible &&\n            <BounceUp className={className} key={keyname}>\n                {children}\n            </BounceUp>\n        }\n    </PoseGroup>\n);\n\nBounce.propTypes = {\n    children  : PropTypes.node,\n    is_visible: PropTypes.bool,\n    keyname   : PropTypes.string,\n};\n\nexport { Bounce };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport posed,\n{ PoseGroup }         from 'react-pose';\n\nconst FadeInFromTopDiv = posed.div({\n    enter: {\n        y         : 0,\n        opacity   : 1,\n        delay     : 300,\n        transition: {\n            default: { duration: 250 },\n        },\n    },\n    exit: {\n        y         : -50,\n        opacity   : 0,\n        transition: { duration: 250 },\n    },\n});\n\nconst FadeInFromBottomDiv = posed.div({\n    enter: {\n        y         : 0,\n        opacity   : 1,\n        delay     : 300,\n        transition: {\n            default: { duration: 250 },\n        },\n    },\n    exit: {\n        y         : 50,\n        opacity   : 0,\n        transition: { duration: 250 },\n    },\n});\n\nconst FadeInOnlyDiv = posed.div({\n    enter: {\n\n        opacity   : 1,\n        transition: { duration: 300 },\n    },\n    exit: {\n        opacity   : 0,\n        transition: { duration: 300 },\n    },\n});\n\nconst FadeWrapper = ({\n    children,\n    className,\n    is_visible,\n    keyname,\n    type,\n}) => {\n    if (type === 'top') {\n        return (\n            <PoseGroup>\n                {is_visible &&\n                    <FadeInFromTopDiv className={className} key={keyname}>\n                        {children}\n                    </FadeInFromTopDiv>\n                }\n            </PoseGroup>\n        );\n    }\n    if (type === 'bottom') {\n        return (\n            <PoseGroup>\n                {is_visible &&\n                    <FadeInFromBottomDiv className={className} key={keyname}>\n                        {children}\n                    </FadeInFromBottomDiv>\n                }\n            </PoseGroup>\n        );\n    }\n    return (\n        <PoseGroup>\n            {is_visible &&\n                <FadeInOnlyDiv className={className} key={keyname}>\n                    {children}\n                </FadeInOnlyDiv>\n            }\n        </PoseGroup>\n    );\n};\n\nFadeWrapper.propTypes = {\n    children  : PropTypes.node,\n    is_visible: PropTypes.bool,\n    keyname   : PropTypes.string,\n    type      : PropTypes.string,\n};\n\nexport { FadeWrapper };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport posed,\n{ PoseGroup }         from 'react-pose';\n\nconst SlideInFromTop = posed.div({\n    enter: {\n        y         : 0,\n        opacity   : 1,\n        transition: {\n            duration: 200,\n        },\n    },\n    exit: {\n        y         : -20,\n        opacity   : 0,\n        transition: {\n            duration: 100,\n        },\n    },\n});\n\nconst SlideInFromBottom = posed.div({\n    enter: {\n        y         : 0,\n        opacity   : 1,\n        transition: {\n            duration: 200,\n        },\n    },\n    exit: {\n        y         : 20,\n        opacity   : 0,\n        transition: {\n            duration: 100,\n        },\n    },\n});\n\nconst SlideIn = ({\n    children,\n    className,\n    keyname,\n    is_visible,\n    type,\n}) => {\n    if (type === 'bottom') {\n        return (\n            <PoseGroup flipMove={false}>\n                {is_visible &&\n                    <SlideInFromBottom className={className} key={keyname}>\n                        {children}\n                    </SlideInFromBottom>\n                }\n            </PoseGroup>\n        );\n    }\n    return (\n        <PoseGroup flipMove={false}>\n            {is_visible &&\n                <SlideInFromTop className={className} key={keyname}>\n                    {children}\n                </SlideInFromTop>\n            }\n        </PoseGroup>\n    );\n};\n\nSlideIn.propTypes = {\n    children  : PropTypes.node,\n    is_visible: PropTypes.bool,\n    keyname   : PropTypes.string,\n    type      : PropTypes.string,\n};\n\nexport { SlideIn };\n","export * from './bounce.jsx';\nexport * from './fade-wrapper.jsx';\nexport * from './slide-in.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst Digit = ({\n    is_latest,\n    is_lost,\n    is_selected,\n    is_trade_page,\n    is_won,\n    value,\n}) => (\n    <span\n        className={classNames('digits__digit-value', {\n            'digits__digit-value--latest'  : is_latest,\n            'digits__digit-value--selected': is_selected,\n            'digits__digit-value--blink'   : is_won && is_latest && is_trade_page,\n            'digits__digit-value--win'     : is_won && is_latest,\n            'digits__digit-value--loss'    : is_lost && is_latest,\n        })}\n    >\n        {value}\n    </span>\n);\n\nDigit.propTypes = {\n    is_latest    : PropTypes.bool,\n    is_lost      : PropTypes.bool,\n    is_selected  : PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    is_won       : PropTypes.bool,\n    value        : PropTypes.number,\n};\n\nexport default Digit;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst DigitSpot = ({\n    current_spot,\n    is_lost,\n    is_won,\n}) => (\n    <React.Fragment>\n        <span className='digits__digit-spot-value'>\n            {current_spot.slice(0, -1)}\n        </span>\n        <span\n            className={classNames('digits__digit-spot-last', {\n                'digits__digit-spot-last--win' : is_won,\n                'digits__digit-spot-last--loss': is_lost,\n            })}\n        >\n            {current_spot.slice(-1)}\n        </span>\n    </React.Fragment>\n);\n\nDigitSpot.propTypes = {\n    current_spot: PropTypes.string,\n    is_lost     : PropTypes.bool,\n    is_won      : PropTypes.bool,\n};\n\nexport default DigitSpot;\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { Bounce }   from 'App/Components/Animations';\nimport Digit        from './digit.jsx';\nimport DigitSpot    from './digit-spot.jsx';\n\nconst DigitDisplay = ({\n    barrier,\n    is_lost,\n    is_trade_page,\n    is_won,\n    latest_digit,\n    value,\n}) => {\n    const { digit, spot } = latest_digit;\n    const is_latest       = value === digit;\n    const is_selected     = value === barrier;\n\n    return (\n        <div\n            className={classNames('digits__digit', {\n                'digits__digit--win' : is_won && is_latest,\n                'digits__digit--loss': is_lost && is_latest,\n            })}\n        >\n            <Bounce\n                is_visible={!!(is_latest && spot)}\n                className='digits__digit-spot'\n                keyname='digits__digit-spot'\n            >\n                <DigitSpot\n                    current_spot={spot}\n                    is_lost={is_lost}\n                    is_visible={!!(is_latest && spot)}\n                    is_won={is_won}\n                />\n            </Bounce>\n            <Digit\n                is_latest={is_latest}\n                is_lost={is_lost}\n                is_trade_page={is_trade_page}\n                is_selected={is_selected}\n                is_won={is_won}\n                value={value}\n            />\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    barrier      : PropTypes.number,\n    is_lost      : PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    is_won       : PropTypes.bool,\n    latest_digit : PropTypes.object,\n    value        : PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst LastDigitParticles = ({\n    is_won,\n    position,\n}) => (\n    <div\n        className={classNames('digits__particles', {\n            'digits__particles--explode': is_won,\n        })}\n        style={{ marginLeft: position }}\n    >\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n        <span className='digits__particles-particle' />\n    </div>\n);\n\nLastDigitParticles.propTypes = {\n    is_won  : PropTypes.bool,\n    position: PropTypes.number,\n};\n\nexport default LastDigitParticles;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nconst LastDigitPointer = ({\n    is_lost,\n    is_won,\n    position,\n}) => (\n    <span\n        className='digits__pointer'\n        style={{ marginLeft: position }}\n    >\n        <Icon\n            icon='IconPriceMove'\n            className={classNames('digits__icon', {\n                'digits__icon--win' : is_won,\n                'digits__icon--loss': is_lost,\n            })}\n            classNamePath='digits__icon-color'\n            type='profit'\n        />\n    </span>\n);\n\nLastDigitPointer.propTypes = {\n    is_lost : PropTypes.bool,\n    is_won  : PropTypes.bool,\n    position: PropTypes.number,\n};\n\nexport default LastDigitPointer;\n","import { observer }       from 'mobx-react';\nimport PropTypes          from 'prop-types';\nimport React              from 'react';\nimport DigitDisplay       from './digit-display.jsx';\nimport LastDigitParticles from './last-digit-particles.jsx';\nimport LastDigitPointer   from './last-digit-pointer.jsx';\n\nconst display_array = Array.from(Array(10).keys()); // digits array [0 - 9]\nclass LastDigitPrediction extends React.Component {\n    state = {};\n\n    componentDidMount() {\n        this.node.querySelectorAll('.digits__digit').forEach((el, idx) => {\n            // get offsetLeft of each Digits\n            this.setState({\n                [idx]: el.offsetLeft,\n            });\n        });\n    }\n\n    getBarrier = (num) => {\n        const  { barrier, contract_type } = this.props;\n\n        const barrier_map = {\n            DIGITMATCH: (val) => val === barrier,\n            DIGITDIFF : (val) => val !== barrier,\n            DIGITOVER : (val) => val > barrier,\n            DIGITUNDER: (val) => val < barrier,\n            DIGITODD  : (val) => val % 2,\n            DIGITEVEN : (val) => !(val % 2),\n        };\n        if (!contract_type) return null;\n        return barrier_map[contract_type](num) ? num : null;\n    };\n\n    render() {\n        const { digits_info, is_ended, is_trade_page, status } = this.props;\n        const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n        const latest_digit = digits_array.slice(-1)[0] || {};\n\n        // 'won' or 'lost' status exists after contract expiry\n        const is_won  = is_ended && status === 'won';\n        // need to explicitly have is_lost condition here\n        // because negating is_won would always be true,\n        // but we only need is_lost condition only once we have the 'won' or 'lost' status\n        const is_lost = is_ended && status === 'lost';\n\n        const position = this.state[latest_digit.digit];\n\n        return (\n            <div\n                ref={node => this.node = node}\n                className='digits'\n            >\n                { display_array.map((idx) => (\n                    <DigitDisplay\n                        barrier={this.getBarrier(idx)}\n                        is_lost={is_lost}\n                        is_trade_page={is_trade_page}\n                        is_won={is_won}\n                        key={idx}\n                        latest_digit={latest_digit}\n                        value={idx}\n                    />\n                ))}\n                { latest_digit.digit >= 0 &&\n                    <LastDigitPointer\n                        is_lost={is_lost}\n                        is_won={is_won}\n                        position={position}\n                    />\n                }\n                <LastDigitParticles\n                    is_won={is_won}\n                    position={position}\n                />\n            </div>\n        );\n    }\n}\n\nLastDigitPrediction.propTypes = {\n    barrier      : PropTypes.number,\n    contract_type: PropTypes.string,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n    status       : PropTypes.string,\n};\n\nexport default observer(LastDigitPrediction);\n","import PropTypes               from 'prop-types';\nimport React                   from 'react';\nimport { SlideIn }             from 'App/Components/Animations';\nimport { LastDigitPrediction } from '../LastDigitPrediction';\nimport 'Sass/app/modules/contract/digits.scss';\n\nclass Digits extends React.PureComponent {\n    state = {\n        mounted: false,\n    }\n\n    componentDidMount() {\n        this.setState({ mounted: true });\n    }\n\n    render() {\n        const {\n            contract_info,\n            digits_info,\n            display_status,\n            is_digit_contract,\n            is_ended,\n            is_trade_page,\n        } = this.props;\n\n        return (\n            <SlideIn\n                is_visible={is_digit_contract && this.state.mounted}\n                className='digits'\n                keyname='digits'\n                type='bottom'\n            >\n                <LastDigitPrediction\n                    barrier={+contract_info.barrier}\n                    contract_type={contract_info.contract_type}\n                    digits_info={digits_info}\n                    is_ended={is_ended}\n                    is_trade_page={is_trade_page}\n                    status={display_status}\n                />\n            </SlideIn>\n        );\n    }\n}\n\nDigits.propTypes = {\n    contract_info    : PropTypes.object,\n    digits_info      : PropTypes.object,\n    display_status   : PropTypes.string,\n    is_digit_contract: PropTypes.bool,\n    is_ended         : PropTypes.bool,\n    is_trade_page    : PropTypes.bool,\n};\n\nexport default Digits;\n"],"sourceRoot":""}