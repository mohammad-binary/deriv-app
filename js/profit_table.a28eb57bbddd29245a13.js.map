{"version":3,"sources":["webpack:///./Assets/Reports/icon-calendar.jsx","webpack:///./App/Components/Form/CompositeCalendar/list-item.jsx","webpack:///./App/Components/Form/CompositeCalendar/side-list.jsx","webpack:///./App/Components/Form/CompositeCalendar/composite-calendar.jsx","webpack:///./Modules/Reports/Containers/profit-table.jsx"],"names":["IconCalendar","className","props","classNames","width","height","viewBox","fill","fillRule","d","propTypes","PropTypes","string","classNamePath","onClick","func","ListItem","is_active","children","oneOfType","node","array","bool","SideList","items","from","to","map","item","duration","rest_of_props","flag","toMoment","endOf","unix","Math","ceil","isActive","key","CompositeCalendar","state","show_to","show_from","list","localize","selectDateRange","setWrapperRef","bind","handleClickOutside","React","PureComponent","this","hideCalendar","applyBatch","startOf","subtract","add","setState","e","wrapperRef","event","contains","target","stopPropagation","preventDefault","document","addEventListener","removeEventListener","date","updateState","epochToMoment","value","apply","values","onChange","Fragment","id","is_read_only","placeholder","icon","showCalendar","from_date_label","to_date_label","ref","Lazy","ctor","should_load","has_progress","setToDate","isPeriodDisabled","isPeriodDisabledTo","setFromDate","isPeriodDisabledFrom","daysFromTodayTo","format","number","ProfitTable","getRowAction","row_obj","getSupportedContracts","Shortcode","extractInfoFromShortcode","shortcode","category","toUpperCase","getContractPath","contract_id","component","i18n_default_text","website_name","components","rel","href","urlFor","undefined","Component","onMount","onUnmount","component_icon","currency","data","date_from","date_to","is_empty","is_loading","error","handleDateChange","handleScroll","has_selected_date","totals","filter_component","columns","getProfitTableColumnsTemplate","length","i18n_heading","i18n_message","empty_message_component","EmptyTradeHistoryMessage","localized_message","localized_period_message","DataTable","data_source","onScroll","footer","MobxPropTypes","arrayOrObservableArray","history","object","connect","modules","client","profit_table","withRouter"],"mappings":"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","file":"js/profit_table.a28eb57bbddd29245a13.js","sourcesContent":["import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCalendar = ({ className, ...props }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' {...props}>\n        <g fill='#7F8397' fillRule='nonzero'>\n            <path className='color1-fill' d='M4 3H2v11h12V3h-2v.5a.5.5 0 1 1-1 0V3H5v.5a.5.5 0 0 1-1 0V3zm1-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 5h12v1H2V5z' />\n            <path className='color1-fill' d='M10.134 9H4.5a.5.5 0 0 1 0-1h5.634a1 1 0 1 1 0 1zM4 11h7.5a.5.5 0 1 1 0 1H4v-1z' />\n        </g>\n    </svg>\n);\n\nIconCalendar.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    onClick      : PropTypes.func,\n};\n\nexport default IconCalendar;\n","import PropTypes  from 'prop-types';\nimport classNames from 'classnames';\nimport React      from 'react';\n\nconst ListItem = ({ onClick, is_active, children }) => (\n    <li\n        className={classNames({\n            'composite-calendar__prepopulated-list--is-active': is_active,\n        })}\n        onClick={onClick}\n    >\n        {children}\n    </li>\n);\n\nListItem.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.node,\n        PropTypes.array,\n    ]),\n    is_active: PropTypes.bool,\n    onClick  : PropTypes.func,\n};\n\nexport default ListItem;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { toMoment }      from 'Utils/Date';\nimport ListItem          from './list-item.jsx';\n\nconst isActive = (from, to, flag) => {\n    if (flag === 0) {\n        return toMoment().endOf('day').unix() === to && from === null;\n    }\n    return Math.ceil(to / 86400) - Math.ceil(from / 86400) === flag;\n\n};\n\nconst SideList = ({ items, from, to }) => (\n    <ul className='composite-calendar__prepopulated-list'>\n        {\n            items.map(item => {\n                const { duration, ...rest_of_props } = item;\n                const is_active = isActive(from, to, duration);\n                return (\n                    <ListItem key={duration} is_active={is_active} {...rest_of_props } />\n                );\n            })\n        }\n    </ul>\n);\n\nSideList.propTypes = {\n    items: PropTypes.array,\n};\n\nexport default SideList;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport InputField   from 'App/Components/Form/InputField/input-field.jsx';\nimport Lazy         from 'App/Containers/Lazy';\nimport IconCalendar from 'Assets/Reports/icon-calendar.jsx';\nimport {\n    daysFromTodayTo,\n    epochToMoment,\n    toMoment }      from 'Utils/Date';\nimport SideList     from './side-list.jsx';\n\nclass CompositeCalendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show_to  : false,\n            show_from: false,\n            list     : [\n                { children: localize('All time'),     onClick: () => this.selectDateRange(0),  duration: 0 },\n                { children: localize('Last 7 days'),  onClick: () => this.selectDateRange(7),  duration: 7 },\n                { children: localize('Last 30 days'), onClick: () => this.selectDateRange(30), duration: 30 },\n                { children: localize('Last 60 days'), onClick: () => this.selectDateRange(60), duration: 60 },\n                { children: localize('Last quarter'), onClick: () => this.selectDateRange(90), duration: 90 },\n            ],\n        };\n\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n\n    selectDateRange (from) {\n        this.hideCalendar();\n        this.applyBatch({\n            from: from ? toMoment().startOf('day').subtract(from, 'day').add(1, 's').unix() : null,\n            to  : toMoment().endOf('day').unix(),\n        });\n    }\n\n    get to_date_label() {\n        const date = epochToMoment(this.props.to);\n        return daysFromTodayTo(date) === 0 ? localize('Today') : date.format('MMM, DD YYYY');\n    }\n\n    get from_date_label() {\n        const date = epochToMoment(this.props.from);\n        return this.props.from ? date.format('MMM, DD YYYY') : '';\n    }\n\n    hideCalendar () {\n        this.setState({\n            show_from: false,\n            show_to  : false,\n        });\n    }\n\n    showCalendar(e) {\n        this.setState({\n            [`show_${e}`]: true,\n        });\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n\n    handleClickOutside (event) {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            event.stopPropagation();\n            event.preventDefault();\n            this.hideCalendar();\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setToDate (date) {\n        this.updateState('to', epochToMoment(date).endOf('day').unix());\n    }\n\n    setFromDate(date) {\n        this.updateState('from', date);\n    }\n\n    updateState(key, value) {\n        this.apply(key, value);\n    }\n\n    applyBatch (values) {\n        this.props.onChange(values);\n    }\n\n    apply(key, value) {\n        this.applyBatch({\n            [key]: value,\n        });\n    }\n\n    isPeriodDisabledTo (date) {\n        return date + 1 <= this.props.from || date > toMoment().endOf('day').unix();\n    }\n\n    isPeriodDisabledFrom (date) {\n        return date - 1 >= this.props.to;\n    }\n\n    render() {\n        const {\n            show_from,\n            show_to,\n            list,\n        } = this.state;\n\n        const {\n            to,\n            from,\n        } = this.props;\n        return (\n            // eslint-disable-next-line react/no-children-prop\n            <React.Fragment>\n                <div id='dt_composite_calendar_inputs' className='composite-calendar__input-fields'>\n                    <InputField id='dt_calendar_input_from' is_read_only={true} placeholder={localize('Date from')} icon={IconCalendar} onClick={this.showCalendar.bind(this, 'from')} value={this.from_date_label} />\n                    <InputField id='dt_calendar_input_to' is_read_only={true} placeholder={localize('Date to')} icon={IconCalendar} onClick={this.showCalendar.bind(this, 'to')} value={this.to_date_label} />\n                </div>\n                {show_to &&\n                <div className='composite-calendar' ref={this.setWrapperRef}>\n                    <SideList from={from} to={to} items={list} />\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"two-month-picker\" */ './two-month-picker.jsx')}\n                        should_load={true}\n                        has_progress={false}\n                        value={to}\n                        onChange={this.setToDate.bind(this)}\n                        isPeriodDisabled={this.isPeriodDisabledTo.bind(this)}\n                    />\n                </div>}\n                {show_from &&\n                <div className='composite-calendar' ref={this.setWrapperRef}>\n                    <SideList from={from} to={to} items={list} />\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"two-month-picker\" */ './two-month-picker.jsx')}\n                        should_load={true}\n                        has_progress={false}\n                        value={from}\n                        onChange={this.setFromDate.bind(this)}\n                        isPeriodDisabled={this.isPeriodDisabledFrom.bind(this)}\n                    />\n                </div>}\n            </React.Fragment>\n        );\n    }\n}\n\nCompositeCalendar.propTypes = {\n    from    : PropTypes.number,\n    onChange: PropTypes.func,\n    to      : PropTypes.number,\n};\nexport default CompositeCalendar;\n\n","import PropTypes                         from 'prop-types';\nimport { PropTypes as MobxPropTypes }    from 'mobx-react';\nimport React                             from 'react';\nimport { withRouter }                    from 'react-router';\nimport { localize }                      from 'App/i18n';\nimport { urlFor }                        from '_common/url';\nimport { website_name }                  from 'App/Constants/app-config';\nimport DataTable                         from 'App/Components/Elements/DataTable';\nimport Localize                          from 'App/Components/Elements/localize.jsx';\nimport CompositeCalendar                 from 'App/Components/Form/CompositeCalendar';\nimport { getContractPath }               from 'App/Components/Routes/helpers';\nimport { getSupportedContracts }         from 'Constants';\nimport { connect }                       from 'Stores/connect';\nimport EmptyTradeHistoryMessage          from '../Components/empty-trade-history-message.jsx';\nimport PlaceholderComponent              from '../Components/placeholder-component.jsx';\nimport { ReportsMeta }                   from '../Components/reports-meta.jsx';\nimport { getProfitTableColumnsTemplate } from '../Constants/data-table-constants';\nimport Shortcode                         from '../Helpers/shortcode';\n\nclass ProfitTable extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    getRowAction = (row_obj) => (\n        getSupportedContracts()[Shortcode.extractInfoFromShortcode(row_obj.shortcode).category.toUpperCase()] ?\n            getContractPath(row_obj.contract_id)\n            : {\n                component: (\n                    <Localize\n                        i18n_default_text='This trade type is currently not supported on {{website_name}}. Please go to <0>Binary.com</0> for details.'\n                        values={{\n                            website_name,\n                        }}\n                        components={[\n                            <a key={0} className='link link--orange' rel='noopener noreferrer' target='_blank' href={urlFor('user/profit_tablews', undefined, undefined, true)} />,\n                        ]}\n                    />\n                ),\n            }\n    );\n\n    render () {\n        const {\n            component_icon,\n            currency,\n            data,\n            date_from,\n            date_to,\n            is_empty,\n            is_loading,\n            error,\n            handleDateChange,\n            handleScroll,\n            has_selected_date,\n            totals,\n        } = this.props;\n        if (error) return <p>{error}</p>;\n\n        const filter_component = (\n            <React.Fragment>\n                <CompositeCalendar\n                    onChange={handleDateChange}\n                    from={date_from}\n                    to={date_to}\n                />\n            </React.Fragment>\n        );\n        const columns = getProfitTableColumnsTemplate(currency, data.length);\n\n        return (\n            <React.Fragment>\n                <ReportsMeta\n                    i18n_heading={localize('Profit table')}\n                    i18n_message={localize('View all trades purchased on your account, and a summary of your total profit/loss.')}\n                    filter_component={filter_component}\n                />\n                { (is_loading && data.length === 0) || is_empty ?\n                    <PlaceholderComponent\n                        is_loading={is_loading}\n                        has_selected_date={has_selected_date}\n                        is_empty={is_empty}\n                        empty_message_component={EmptyTradeHistoryMessage}\n                        component_icon={component_icon}\n                        localized_message={localize('You have no trading activity yet.')}\n                        localized_period_message={localize('You have no trading activity for this period.')}\n                    />\n                    :\n                    <DataTable\n                        className='profit-table'\n                        data_source={data}\n                        columns={columns}\n                        onScroll={handleScroll}\n                        footer={totals}\n                        is_empty={is_empty}\n                        getRowAction={this.getRowAction}\n                    >\n                        <PlaceholderComponent\n                            is_loading={is_loading}\n                        />\n                    </DataTable>\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nProfitTable.propTypes = {\n    component_icon   : PropTypes.string,\n    currency         : PropTypes.string,\n    data             : MobxPropTypes.arrayOrObservableArray,\n    date_from        : PropTypes.number,\n    date_to          : PropTypes.number,\n    error            : PropTypes.string,\n    handleDateChange : PropTypes.func,\n    handleScroll     : PropTypes.func,\n    has_selected_date: PropTypes.bool,\n    history          : PropTypes.object,\n    is_empty         : PropTypes.bool,\n    is_loading       : PropTypes.bool,\n    onMount          : PropTypes.func,\n    onUnmount        : PropTypes.func,\n    totals           : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, client }) => ({\n        currency         : client.currency,\n        data             : modules.profit_table.data,\n        date_from        : modules.profit_table.date_from,\n        date_to          : modules.profit_table.date_to,\n        error            : modules.profit_table.error,\n        handleScroll     : modules.profit_table.handleScroll,\n        handleDateChange : modules.profit_table.handleDateChange,\n        has_selected_date: modules.profit_table.has_selected_date,\n        is_empty         : modules.profit_table.is_empty,\n        is_loading       : modules.profit_table.is_loading,\n        onMount          : modules.profit_table.onMount,\n        onUnmount        : modules.profit_table.onUnmount,\n        totals           : modules.profit_table.totals,\n    })\n)(withRouter(ProfitTable));\n"],"sourceRoot":""}